#Game is finished! There are a couple ways to improve this project in the future:
#1) The Ace being worth 1 or 11 only works for a current ace on the flop;
#2) The play again function is very glitchy (i.e. it does not work on a player bust)
#3) The code is very disorganized. Probably why #2 above is glitchy!

# I will definitely post a second, better solution on a later date!
import random

rank=['2', '3', '4', '5', '6', '7', '8', '9', '10', '10', '10', '10', '11']
suit=['Hearts', 'Diamond', 'Spades', 'Clubs']
class Deck():
    def __init__(self):
        self.deck=[]
        for s in suit:
            for r in rank:
                self.deck.append(r+" "+s)
        #print(self.deck) will print out deck
        
    def deal(self):
        single_card=self.deck.pop()
        return single_card
        #return 10
    
    def shuffle(self):
        random.shuffle(self.deck)
    
#make a bet
class Chips:
    def __init__(self):
        self.total=100
        self.bet=0
        #print(self.bet, "made bet")
    def win_bet(self):
        self.total=self.total+self.bet
    def lose_bet(self):
        self.total=self.total-self.bet

def player_wins():
    print("Player Wins!")
    chips.win_bet()
    
def dealer_wins():
    print("Dealer Wins!")
    chips.lose_bet()

def make_bet():
    while True:
        try:
            bet=int(input("make a bet") )
        except ValueError:
            print("Must be a number")
        else:
            chips=Chips()
            if chips.bet>chips.total:
                print("Bet cannot be bigger than total chips")
            else:
                return bet
    
class Hand():
    def __init__(self):
        self.cards=[]
        self.value=0
        self.aces=0
        
    def get_card(self, card):
        self.cards.append(card)
        #print(self.cards, "new hand") # prints array of new hand
        s=card.split(" ")
        num=int(s[0])
        if num==11 and self.value+num>21:
            self.value=self.value+1
        else:
            self.value=self.value+num    

deck=Deck()
deck.shuffle()
bet=make_bet()

chips=Chips()
chips.bet=int(bet)

deal=deck.deal()  #gets card

player_hand=Hand()
dealer_hand=Hand()
player_hand.get_card(deal)
dealer_hand.get_card(deal)

def hit_or_stay():
    global game, dealer_turn #Must be gobal else: UnboundLocalError: local variable 'game' referenced before assignment
    while game==True:
        enter=input("Hit or stay")
        if enter.lower()=="hit":
            deal=deck.deal()
            player_hand.get_card(deal)
            print("deal", deal, player_hand.value, "new total")          
            if player_hand.value>21:
                print("Player Bust! Dealer Wins.")
                chips.lose_bet()
                game=False
        if enter.lower()=="stay":
                print("Dealers turn")
                dealer_turn=True
                game=False
                
dealer_turn=False                
game=True
while game:
    hit_or_stay()

while dealer_turn:
    print("Dealers Total:", dealer_hand.value)
    if dealer_hand.value>player_hand.value:
        dealer_wins()
        dealer_turn=False
    if dealer_hand.value>16 and dealer_hand.value<player_hand.value:
        player_wins()
        dealer_turn=False
    if dealer_hand.value>16 and dealer_hand.value>player_hand.value:
        dealer_wins()
        dealer_turn=False
    if dealer_hand.value<17:
        dealer_hand.get_card(deal)
    if dealer_hand.value>21:
        print("Dealer Bust! Player wins")
        player_wins()
        dealer_turn=False
    if dealer_hand.value==player_hand.value:
        print("Tie!")
        dealer_turn=False
        
    print(chips.total,  "total chips")
    new_game=input("New game? Y or N")
    if new_game.lower()=="y":
        game=True
        continue
    else:
        print("Goodbye!")
        break
