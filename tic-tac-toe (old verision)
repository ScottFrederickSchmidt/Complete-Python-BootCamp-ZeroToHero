#Working original verision! That needs some minor adjustments:
#full_board_check is showing game is full and a draw on turn2 but not on turn 9?
#Game does not fully stop running after a "win"
#needs a replay function
#A player can "steal" their opponents square: Solved by changing line 65 to and instead of or
import random

def display_board(board):
    print('     |      |  ')
    print(' ' + board[7] +  '    |   '+ board[8]   +     '   | '    + board[9] )
    print('     |      |  ')
    print(' ----------------- ')
    print('     |      |  ')
    print(' ' + board[4] +  '    |   '+ board[5]   +    '   | '   +    board[6] )
    print('     |      |  ')
    print(' ----------------- ')
    print('     |      |  ')
    print(' ' + board[1] +  '    |   '+ board[2]   +    '   | '   +    board[3] )
    print('     |      |  ')


def choose_first():
    r=random.randint(0, 1)
    if r==0:
        return player1
    else:
        return player2
            
def get_mark():
    if turn=='player1':
        print(player1)
        return player1
    else:
        print(player2)
        return player2

def placemark(board, mark, position):
    board[position]=mark
    #board[position]='X'
    print(board, mark, position)

def win_check(board,mark):
    return ((board[7] == mark and board[8] == mark and board[9] == mark) or
    (board[4] == mark and board[5] == mark and board[6] == mark) or 
    (board[1] == mark and board[2] == mark and board[3] == mark) or 
    (board[7] == mark and board[4] == mark and board[1] == mark) or 
    (board[8] == mark and board[5] == mark and board[2] == mark) or  
    (board[9] == mark and board[6] == mark and board[3] == mark) or  
    (board[7] == mark and board[5] == mark and board[3] == mark) or  
    (board[9] == mark and board[5] == mark and board[1] == mark)) 

def space_check(board, position):
    return board[position]==''

def full_board_check(board):
    for n in range(1, 10):  # do not check 0 index 
        if space_check(board, n): # if True, it is empty
            return False
    return True
        
def get_position(board):
    position=''
    while position not in [1, 2, 3, 4, 5, 6, 7, 8, 9] or not space_check(board, position):
        position=int(input("Next position? Enter 1-9:"))
        if position in [1, 2, 3, 4, 5, 6, 7, 8, 9] and space_check(board, position):
            return position
            break
            
def pick():
    while True:
        pick=input("Enter X or O")
        if pick in['X', 'x', 'O', 'o']:
            pick=pick.upper()
            if pick=='X':
                print("Player1 you picked:", pick)
                player1=pick
                player2='O'
                break
            if pick=='O':
                print("Player1 you picked:", pick)
                player1=pick
                player2='X'
                break
            
#ATTEMPT TO DO INDIVIDUAL TURNS
board=['#', '', '', '', '', '', '', '', '', '']
player1='X'
player2='0'
pick()
temp=choose_first()
while True:
    turn=temp
    #display_board(board)   
    game_on=True
    while game_on:
        if turn=="player1":
            display_board(board)  
            mark=player1
            position=get_position(board)
            placemark(board, mark, position)
            turn="player2"
            if win_check(board, mark): 
                print("win!")
                game_on = False
            else:
                if full_board_check(board):
                    game_on = False
                    print("draw!")
        else: # player2
            display_board(board)  
            mark=player2
            position=get_position(board)
            placemark(board, mark, position)
            win_check(board, mark) 
            full_board_check(board)
            turn="player1"
            if win_check(board, mark): 
                print("win!")
                game_on=False
